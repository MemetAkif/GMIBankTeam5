[
  {
    "line": 2,
    "elements": [
      {
        "line": 3,
        "name": "US16_money_transfer_between_accounts",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 27703000000,
              "status": "passed"
            },
            "line": 4,
            "name": "User is on GMIBank Login page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_is_on_GMIBank_Login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 196000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user provide valid username \"Team5Customer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Team5Customer\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 170000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user provide valid password \"customerTeam5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"customerTeam5\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_password(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 158000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user click sign in button",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_click_sign_in_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 882000000,
              "status": "passed"
            },
            "line": 8,
            "name": "verify  username when user logged in",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_username_when_user_logged_in()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 202000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user goes to Transfer Money under My Operation",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_goes_to_Transfer_Money_under_My_Operation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20046000000,
              "status": "passed"
            },
            "line": 10,
            "name": "verify user is on Customer Accounts page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_user_is_on_Customer_Accounts_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:09:07.772Z",
        "line": 12,
        "name": "User should have at least 2 accounts",
        "description": "",
        "id": "us16-money-can-transferable-between-accounts;user-should-have-at-least-2-accounts",
        "after": [
          {
            "result": {
              "duration": 718000000,
              "status": "passed"
            },
            "match": {
              "location": "stepdefinitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 233000000,
              "status": "passed"
            },
            "line": 13,
            "name": "verify user has minimum two accounts",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_user_has_minimum_two_accounts()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US16TCs"
          }
        ]
      },
      {
        "line": 3,
        "name": "US16_money_transfer_between_accounts",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 23103000000,
              "status": "passed"
            },
            "line": 4,
            "name": "User is on GMIBank Login page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_is_on_GMIBank_Login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 166000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user provide valid username \"Team5Customer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Team5Customer\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 130000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user provide valid password \"customerTeam5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"customerTeam5\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_password(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 81000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user click sign in button",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_click_sign_in_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 938000000,
              "status": "passed"
            },
            "line": 8,
            "name": "verify  username when user logged in",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_username_when_user_logged_in()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 224000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user goes to Transfer Money under My Operation",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_goes_to_Transfer_Money_under_My_Operation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20043000000,
              "status": "passed"
            },
            "line": 10,
            "name": "verify user is on Customer Accounts page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_user_is_on_Customer_Accounts_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:09:58.287Z",
        "line": 15,
        "name": "User can select the first account as From dropdown where they receive their money from",
        "description": "",
        "id": "us16-money-can-transferable-between-accounts;user-can-select-the-first-account-as-from-dropdown-where-they-receive-their-money-from",
        "after": [
          {
            "result": {
              "duration": 571000000,
              "status": "passed"
            },
            "match": {
              "location": "stepdefinitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 276000000,
              "status": "passed"
            },
            "line": 16,
            "name": "user select an account from FROM box \"5778\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5778\"",
                  "offset": 37
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_FROM_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "line": 17,
            "name": "verify selected account is displayed in the FROM box \"5778\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5778\"",
                  "offset": 53
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.verify_selected_account_is_displayed_in_the_FROM_box(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US16TCs"
          }
        ]
      },
      {
        "line": 3,
        "name": "US16_money_transfer_between_accounts",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 23096000000,
              "status": "passed"
            },
            "line": 4,
            "name": "User is on GMIBank Login page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_is_on_GMIBank_Login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 160000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user provide valid username \"Team5Customer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Team5Customer\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 117000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user provide valid password \"customerTeam5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"customerTeam5\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_password(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 89000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user click sign in button",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_click_sign_in_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 844000000,
              "status": "passed"
            },
            "line": 8,
            "name": "verify  username when user logged in",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_username_when_user_logged_in()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 155000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user goes to Transfer Money under My Operation",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_goes_to_Transfer_Money_under_My_Operation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h2\"}\n  (Session info: chrome\u003d86.0.4240.198)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027Mehmets-Air\u0027, ip: \u0027fe80:0:0:0:870:6e49:afec:b8f9%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.13.6\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: /var/folders/2g/s60gg7qj3xx...}, goog:chromeOptions: {debuggerAddress: localhost:50461}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 7922aa627915205834f9c0e236c3d329\n*** Element info: {Using\u003dxpath, value\u003d//h2}\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\n\tat com.sun.proxy.$Proxy16.getText(Unknown Source)\n\tat stepdefinitions.US16_StepDefinitions.verify_user_is_on_Customer_Accounts_page(US16_StepDefinitions.java:66)\n\tat ✽.verify user is on Customer Accounts page(file:///Users/mehmetali/IdeaProjects/GMIBankTeam5/src/test/resources/features/US16_money_can_be_transfarable.feature:10)\n",
              "duration": 30087000000,
              "status": "failed"
            },
            "line": 10,
            "name": "verify user is on Customer Accounts page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_user_is_on_Customer_Accounts_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:10:43.879Z",
        "line": 19,
        "name": "User can select the other account as TO dropdown where they receive their money to",
        "description": "",
        "id": "us16-money-can-transferable-between-accounts;user-can-select-the-other-account-as-to-dropdown-where-they-receive-their-money-to",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png",
                "name": "screenshots"
              }
            ],
            "result": {
              "duration": 611000000,
              "status": "passed"
            },
            "match": {
              "location": "stepdefinitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 20,
            "name": "user select an account from FROM box \"5778\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5778\"",
                  "offset": 37
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_FROM_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 21,
            "name": "user select an account from TO box \"5776\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5776\"",
                  "offset": 35
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_TO_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 22,
            "name": "verify selected account is displayed in the TO box \"5776\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5776\"",
                  "offset": 51
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.verify_selected_account_is_displayed_in_the_TO_box(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US16TCs"
          }
        ]
      },
      {
        "line": 3,
        "name": "US16_money_transfer_between_accounts",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027Mehmets-Air\u0027, ip: \u0027fe80:0:0:0:870:6e49:afec:b8f9%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.13.6\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: /var/folders/2g/s60gg7qj3xx...}, goog:chromeOptions: {debuggerAddress: localhost:50493}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 6edc5ee85c5a93510c7d37deb752b0d9\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\n\tat utilities.Driver.getDriver(Driver.java:56)\n\tat utilities.ReusableMethods.waitForVisibility(ReusableMethods.java:71)\n\tat stepdefinitions.US16_StepDefinitions.user_is_on_GMIBank_Login_page(US16_StepDefinitions.java:28)\n\tat ✽.User is on GMIBank Login page(file:///Users/mehmetali/IdeaProjects/GMIBankTeam5/src/test/resources/features/US16_money_can_be_transfarable.feature:4)\n",
              "duration": 12318000000,
              "status": "failed"
            },
            "line": 4,
            "name": "User is on GMIBank Login page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_is_on_GMIBank_Login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 5,
            "name": "user provide valid username \"Team5Customer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Team5Customer\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user provide valid password \"customerTeam5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"customerTeam5\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_password(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user click sign in button",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_click_sign_in_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "verify  username when user logged in",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_username_when_user_logged_in()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user goes to Transfer Money under My Operation",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_goes_to_Transfer_Money_under_My_Operation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "verify user is on Customer Accounts page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_user_is_on_Customer_Accounts_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:39.084Z",
        "line": 24,
        "name": "User can provide  a balance that they want to proceed with",
        "description": "",
        "id": "us16-money-can-transferable-between-accounts;user-can-provide--a-balance-that-they-want-to-proceed-with",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027Mehmets-Air\u0027, ip: \u0027fe80:0:0:0:870:6e49:afec:b8f9%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.13.6\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: /var/folders/2g/s60gg7qj3xx...}, goog:chromeOptions: {debuggerAddress: localhost:50493}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 6edc5ee85c5a93510c7d37deb752b0d9\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\n\tat utilities.Driver.getDriver(Driver.java:56)\n\tat stepdefinitions.Hook.tearDown(Hook.java:16)\n",
              "duration": 7000000,
              "status": "failed"
            },
            "match": {
              "location": "stepdefinitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 25,
            "name": "user select an account from FROM box \"5778\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5778\"",
                  "offset": 37
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_FROM_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 26,
            "name": "user select an account from TO box \"5776\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5776\"",
                  "offset": 35
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_TO_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 27,
            "name": "user provide an amount that user want to transfer \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 50
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_an_amount_that_user_want_to_transfer(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 28,
            "name": "verify the amount is visible in the box \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 40
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.verify_the_amount_is_visible_in_the_box(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US16TCs"
          }
        ]
      },
      {
        "line": 3,
        "name": "US16_money_transfer_between_accounts",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class stepdefinitions.US16_StepDefinitions\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\n\t... 33 more\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027Mehmets-Air\u0027, ip: \u0027fe80:0:0:0:870:6e49:afec:b8f9%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.13.6\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: /var/folders/2g/s60gg7qj3xx...}, goog:chromeOptions: {debuggerAddress: localhost:50493}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 6edc5ee85c5a93510c7d37deb752b0d9\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\n\tat utilities.Driver.getDriver(Driver.java:56)\n\tat pages.GMIHomePage.\u003cinit\u003e(GMIHomePage.java:9)\n\tat stepdefinitions.US16_StepDefinitions.\u003cinit\u003e(US16_StepDefinitions.java:19)\n\t... 38 more\n",
              "duration": 8000000,
              "status": "failed"
            },
            "line": 4,
            "name": "User is on GMIBank Login page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_is_on_GMIBank_Login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "user provide valid username \"Team5Customer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Team5Customer\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user provide valid password \"customerTeam5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"customerTeam5\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_password(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user click sign in button",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_click_sign_in_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "verify  username when user logged in",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_username_when_user_logged_in()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user goes to Transfer Money under My Operation",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_goes_to_Transfer_Money_under_My_Operation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "verify user is on Customer Accounts page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_user_is_on_Customer_Accounts_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:51.449Z",
        "line": 30,
        "name": "User should provide a description for that transfer",
        "description": "",
        "id": "us16-money-can-transferable-between-accounts;user-should-provide-a-description-for-that-transfer",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027Mehmets-Air\u0027, ip: \u0027fe80:0:0:0:870:6e49:afec:b8f9%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.13.6\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: /var/folders/2g/s60gg7qj3xx...}, goog:chromeOptions: {debuggerAddress: localhost:50493}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 6edc5ee85c5a93510c7d37deb752b0d9\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\n\tat utilities.Driver.getDriver(Driver.java:56)\n\tat stepdefinitions.Hook.tearDown(Hook.java:16)\n",
              "duration": 7000000,
              "status": "failed"
            },
            "match": {
              "location": "stepdefinitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 31,
            "name": "user select an account from FROM box \"5778\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5778\"",
                  "offset": 37
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_FROM_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 32,
            "name": "user select an account from TO box \"5776\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5776\"",
                  "offset": 35
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_TO_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 33,
            "name": "user provide an amount that user want to transfer \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 50
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_an_amount_that_user_want_to_transfer(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 34,
            "name": "user provide description to the box \"Transfer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Transfer\"",
                  "offset": 36
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_description_to_the_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "verify the description is visible int the box \"Transfer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Transfer\"",
                  "offset": 46
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.verify_the_description_is_visible_int_the_box(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US16TCs"
          }
        ]
      },
      {
        "line": 3,
        "name": "US16_money_transfer_between_accounts",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class stepdefinitions.US16_StepDefinitions\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\n\t... 33 more\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027Mehmets-Air\u0027, ip: \u0027fe80:0:0:0:870:6e49:afec:b8f9%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.13.6\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: /var/folders/2g/s60gg7qj3xx...}, goog:chromeOptions: {debuggerAddress: localhost:50493}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 6edc5ee85c5a93510c7d37deb752b0d9\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\n\tat utilities.Driver.getDriver(Driver.java:56)\n\tat pages.GMIHomePage.\u003cinit\u003e(GMIHomePage.java:9)\n\tat stepdefinitions.US16_StepDefinitions.\u003cinit\u003e(US16_StepDefinitions.java:19)\n\t... 38 more\n",
              "duration": 8000000,
              "status": "failed"
            },
            "line": 4,
            "name": "User is on GMIBank Login page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_is_on_GMIBank_Login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 5,
            "name": "user provide valid username \"Team5Customer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Team5Customer\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user provide valid password \"customerTeam5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"customerTeam5\"",
                  "offset": 28
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_valid_password(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user click sign in button",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_click_sign_in_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "verify  username when user logged in",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_username_when_user_logged_in()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user goes to Transfer Money under My Operation",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_goes_to_Transfer_Money_under_My_Operation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "verify user is on Customer Accounts page",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.verify_user_is_on_Customer_Accounts_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:51.506Z",
        "line": 37,
        "name": "User can make sure  transfer is done successfully validating the message an amount of transaction",
        "description": "",
        "id": "us16-money-can-transferable-between-accounts;user-can-make-sure--transfer-is-done-successfully-validating-the-message-an-amount-of-transaction",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027Mehmets-Air\u0027, ip: \u0027fe80:0:0:0:870:6e49:afec:b8f9%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.13.6\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: /var/folders/2g/s60gg7qj3xx...}, goog:chromeOptions: {debuggerAddress: localhost:50493}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 6edc5ee85c5a93510c7d37deb752b0d9\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\n\tat utilities.Driver.getDriver(Driver.java:56)\n\tat stepdefinitions.Hook.tearDown(Hook.java:16)\n",
              "duration": 8000000,
              "status": "failed"
            },
            "match": {
              "location": "stepdefinitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 38,
            "name": "user select an account from FROM box \"5778\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5778\"",
                  "offset": 37
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_FROM_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "user select an account from TO box \"5776\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5776\"",
                  "offset": 35
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_select_an_account_from_TO_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "user provide an amount that user want to transfer \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 50
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_an_amount_that_user_want_to_transfer(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 41,
            "name": "user provide description to the box \"Transfer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Transfer\"",
                  "offset": 36
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.user_provide_description_to_the_box(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 42,
            "name": "user click Make Transfer button",
            "match": {
              "location": "stepdefinitions.US16_StepDefinitions.user_click_Make_Transfer_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "verify success message \"100.0$ is transferred successfully.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100.0$ is transferred successfully.\"",
                  "offset": 23
                }
              ],
              "location": "stepdefinitions.US16_StepDefinitions.verify_success_message(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US16TCs"
          }
        ]
      }
    ],
    "name": "US16_money_can_transferable_between_accounts",
    "description": "",
    "id": "us16-money-can-transferable-between-accounts",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/US16_money_can_be_transfarable.feature",
    "tags": [
      {
        "name": "@US16TCs",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]